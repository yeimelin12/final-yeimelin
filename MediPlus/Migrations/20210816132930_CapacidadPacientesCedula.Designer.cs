// <auto-generated />
using System;
using MediPlus.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MediPlus.Migrations
{
    [DbContext(typeof(CITASMEDICASDBContext))]
    [Migration("20210816132930_CapacidadPacientesCedula")]
    partial class CapacidadPacientesCedula
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MediPlus.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("FechaCita")
                        .HasColumnType("date");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int?>("IdPacientes")
                        .HasColumnType("int");

                    b.Property<string>("MotivoDeConsulta")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Motivo_de_consulta");

                    b.HasKey("Id");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPacientes");

                    b.ToTable("CITAS");
                });

            modelBuilder.Entity("MediPlus.Models.Codigosvalidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("Enviado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "Codigo" }, "UQ__CODIGOSV__06370DAC4DADD383")
                        .IsUnique();

                    b.ToTable("CODIGOSVALIDACION");
                });

            modelBuilder.Entity("MediPlus.Models.Especialidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ESPECIALIDADES");
                });

            modelBuilder.Entity("MediPlus.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CapacidadPacientes")
                        .HasColumnType("int");

                    b.Property<string>("CedulaIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Especialidad")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Oficina")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Especialidad");

                    b.HasIndex("IdUsuario");

                    b.ToTable("MEDICOS");
                });

            modelBuilder.Entity("MediPlus.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("LugarDeNacimiento")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Lugar_de_nacimiento");

                    b.Property<string>("Nombres")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("PACIENTES");
                });

            modelBuilder.Entity("MediPlus.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("MediPlus.Models.Secretarium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Oficina")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("SECRETARIA");
                });

            modelBuilder.Entity("MediPlus.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Confirmado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex(new[] { "Email" }, "UQ__USUARIOS__A9D10534E477E492")
                        .IsUnique();

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("MediPlus.Models.Cita", b =>
                {
                    b.HasOne("MediPlus.Models.Medico", "IdMedicoNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdMedico")
                        .HasConstraintName("fk_medico_consulta");

                    b.HasOne("MediPlus.Models.Paciente", "IdPacientesNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdPacientes")
                        .HasConstraintName("fk_gestion_pacientes");

                    b.Navigation("IdMedicoNavigation");

                    b.Navigation("IdPacientesNavigation");
                });

            modelBuilder.Entity("MediPlus.Models.Codigosvalidacion", b =>
                {
                    b.HasOne("MediPlus.Models.Usuario", "Usuario")
                        .WithMany("Codigosvalidacions")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__CODIGOSVA__Usuar__403A8C7D")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MediPlus.Models.Medico", b =>
                {
                    b.HasOne("MediPlus.Models.Especialidade", "EspecialidadNavigation")
                        .WithMany("Medicos")
                        .HasForeignKey("Especialidad")
                        .HasConstraintName("FK__MEDICOS__Especia__45F365D3");

                    b.HasOne("MediPlus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Medicos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__MEDICOS__IdUsuar__46E78A0C")
                        .IsRequired();

                    b.Navigation("EspecialidadNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("MediPlus.Models.Paciente", b =>
                {
                    b.HasOne("MediPlus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__PACIENTES__IdUsu__4316F928")
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("MediPlus.Models.Secretarium", b =>
                {
                    b.HasOne("MediPlus.Models.Medico", "IdDoctorNavigation")
                        .WithMany("Secretaria")
                        .HasForeignKey("IdDoctor")
                        .HasConstraintName("FK__SECRETARI__IdDoc__4E88ABD4")
                        .IsRequired();

                    b.HasOne("MediPlus.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Secretaria")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__SECRETARI__IdUsu__4D94879B")
                        .IsRequired();

                    b.Navigation("IdDoctorNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("MediPlus.Models.Usuario", b =>
                {
                    b.HasOne("MediPlus.Models.Role", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK__USUARIOS__RolId__3B75D760");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("MediPlus.Models.Especialidade", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("MediPlus.Models.Medico", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Secretaria");
                });

            modelBuilder.Entity("MediPlus.Models.Paciente", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("MediPlus.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MediPlus.Models.Usuario", b =>
                {
                    b.Navigation("Codigosvalidacions");

                    b.Navigation("Medicos");

                    b.Navigation("Pacientes");

                    b.Navigation("Secretaria");
                });
#pragma warning restore 612, 618
        }
    }
}
